Search.setIndex({"docnames": ["index", "sections/Code_overview", "sections/Command_line_interface", "sections/Configuration/Configuration_overview", "sections/Configuration/Route_planning_config", "sections/Configuration/Vessel_performance_config", "sections/Examples", "sections/Installation", "sections/Outputs", "sections/Route_calculation", "sections/Route_optimisation", "sections/Vehicle_specifics", "sections/ipython_notebooks"], "filenames": ["index.rst", "sections/Code_overview.rst", "sections/Command_line_interface.rst", "sections/Configuration/Configuration_overview.rst", "sections/Configuration/Route_planning_config.rst", "sections/Configuration/Vessel_performance_config.rst", "sections/Examples.rst", "sections/Installation.rst", "sections/Outputs.rst", "sections/Route_calculation.rst", "sections/Route_optimisation.rst", "sections/Vehicle_specifics.rst", "sections/ipython_notebooks.rst"], "titles": ["Welcome to the PolarRoute Manual Pages", "<span class=\"section-number\">1. </span>Background", "<span class=\"section-number\">4. </span>Command Line Interface", "<span class=\"section-number\">5. </span>Configuration Overview", "<span class=\"section-number\">5.2. </span>Configuration - Route Planning", "<span class=\"section-number\">5.1. </span>Configuration - Vessel Performance Modeller", "<span class=\"section-number\">10. </span>Examples of running code", "<span class=\"section-number\">2. </span>Installation", "<span class=\"section-number\">6. </span>Outputs - Data Types", "<span class=\"section-number\">8. </span>Methods - Route Calculation", "<span class=\"section-number\">9. </span>Methods - Route Planner", "<span class=\"section-number\">7. </span>Methods - Vessel Performance", "<span class=\"section-number\">3. </span>Python &amp; iPython Notebooks"], "terms": {"i": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12], "tool": [0, 1], "optimis": [0, 1, 2], "rout": [0, 1, 2, 3, 5, 7], "maritim": 0, "vehicl": [0, 1, 2, 8, 9, 10, 11], "travel": [0, 1, 2, 5, 8, 9, 10], "polar": [0, 1, 7], "water": [0, 1, 5, 11], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "softwar": [0, 1, 2, 3, 7], "packag": [0, 2, 3, 7, 10], "ha": [0, 2, 7, 8, 12], "been": [0, 2, 8, 12], "develop": [0, 1, 4], "british": [0, 11], "antarct": [0, 11], "survei": [0, 11], "ba": 0, "primarili": [0, 2], "research": [0, 11], "vessel": [0, 1, 2, 3, 4, 8, 9, 10], "rr": [0, 11], "sir": [0, 11], "david": [0, 11], "attenborough": [0, 11], "though": 0, "applic": [0, 1], "ani": [0, 2, 8, 11], "e": [0, 1, 5, 10], "g": [0, 1, 5, 10], "auv": 0, "The": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12], "written": [0, 3], "python": [0, 3, 6, 7, 10], "open": [0, 1, 5, 8, 12], "sourc": [0, 2, 4, 7, 10], "For": [0, 4, 10, 12], "more": [0, 6, 8, 10, 12], "inform": [0, 1, 2, 4, 5, 8, 9, 10, 12], "project": [0, 2], "pleas": [0, 12], "visit": 0, "websit": 0, "follow": [0, 1, 2, 4, 5, 7, 8, 11, 12], "our": [0, 1, 11], "github": [0, 2, 7], "repositori": [0, 7], "codebas": [0, 1, 10], "ongo": 0, "yet": 0, "complet": 0, "contact": 0, "content": 0, "background": 0, "code": [0, 2, 9, 10], "overview": [0, 2, 8], "structur": [0, 3, 5, 8, 12], "instal": 0, "gdal": 0, "ipython": [0, 6], "notebook": [0, 6], "simul": [0, 2], "digit": [0, 2], "environ": [0, 2, 7, 8, 11], "command": [0, 3, 5, 6, 7], "line": [0, 3, 5, 6, 9], "interfac": [0, 11], "add_vehicl": [0, 5], "optimise_rout": [0, 12], "export_mesh": 0, "rebuild_mesh": 0, "calculate_rout": 0, "plot": [0, 1], "configur": [0, 1, 2, 8, 11, 12], "perform": [0, 1, 2, 3, 8, 9, 10, 12], "model": [0, 2, 3, 8], "plan": [0, 1, 2, 3, 8, 12], "output": [0, 1, 2, 4, 10, 12], "data": [0, 1, 2], "type": [0, 1, 2, 9, 10, 11], "vessel_mesh": [0, 2, 12], "json": [0, 2, 3, 10, 11, 12], "file": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12], "method": [0, 1], "factori": 0, "abstract": 0, "ship": [0, 1, 4, 5, 9], "sda": [0, 5, 8], "glider": 0, "slocum": 0, "calcul": [0, 2, 5, 11], "planner": [0, 1, 2, 8], "modul": 0, "exampl": [0, 1, 3, 8], "run": [0, 1, 2, 7, 8, 10, 12], "1": [0, 8, 10], "antarctica": [0, 7], "process": [0, 1, 2, 3, 8, 10], "all": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11], "stage": [0, 1, 2, 3, 7, 8, 10, 12], "2": 0, "dijkstra": [0, 1, 2, 4, 10, 12], "v": [0, 2, 9, 10], "smooth": [0, 1, 2, 4, 12], "path": [0, 1, 2, 4, 9, 10, 12], "variat": 0, "properti": [0, 8, 10], "we": [1, 3, 6, 7, 10, 12], "present": 1, "an": [1, 2, 7, 8, 10, 11, 12], "autom": 1, "us": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12], "ic": [1, 5, 8, 11], "strengthen": 1, "oper": [1, 7], "region": [1, 10], "build": 1, "underwat": [1, 11], "long": [1, 2, 4, 8, 10], "distanc": [1, 9, 10], "report": 1, "fox": 1, "et": 1, "al": 1, "2021": 1, "start": [1, 4, 8, 9, 10], "same": [1, 4, 10, 12], "grid": 1, "base": [1, 2, 4, 10, 11], "construct": [1, 4, 8, 9, 10, 12], "approach": 1, "obtain": 1, "satisfi": 1, "constraint": 1, "appli": [1, 8, 10], "novel": 1, "result": 1, "shorten": 1, "ensur": 1, "great": 1, "circl": 1, "arc": 1, "where": [1, 2, 4, 5, 8, 10], "possibl": 1, "two": [1, 2, 4, 7, 8, 9, 10, 11, 12], "effici": 1, "gener": [1, 2, 10, 12], "standard": [1, 3, 8, 10], "navig": [1, 2], "solut": [1, 12], "around": [1, 10], "area": 1, "domin": 1, "sea": [1, 5, 11], "while": 1, "have": [1, 7, 8], "focuss": 1, "ar": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12], "also": [1, 2, 5, 12], "broader": 1, "context": 1, "commerci": 1, "must": [1, 4, 12], "respons": 1, "chang": 1, "local": 1, "weather": 1, "condit": 1, "outlin": [1, 3, 6, 7, 10], "manual": [1, 12], "provid": [1, 2, 3, 5], "user": [1, 2, 4, 6, 8, 9, 10, 12], "thei": [1, 2], "need": [1, 9], "set": [1, 2, 4, 5, 8], "hope": 1, "suppli": [1, 10, 11], "each": [1, 2, 3, 4, 8, 10, 11], "section": [1, 2, 3, 6, 7, 8, 9, 10, 12], "allow": [1, 2, 5, 7], "understand": 1, "throughout": [1, 6], "toolkit": 1, "can": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "separ": [1, 3, 8, 10], "four": 1, "main": 1, "shown": [1, 2], "figur": [1, 2], "below": [1, 7, 8, 10, 11], "routeplann": [1, 10, 12], "broken": 1, "down": [1, 8], "specif": [1, 2, 5, 8, 11, 12], "featur": [1, 8, 10], "discret": [1, 8], "mesh": [1, 2, 4, 8, 9, 10, 11, 12], "In": [1, 3, 6, 7, 10], "knowledg": 1, "how": [1, 10, 12], "variabl": [1, 2, 4, 5, 9, 10], "comput": [1, 10], "graph": [1, 4, 10, 11], "constrain": 1, "from": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12], "give": [1, 9, 12], "between": [1, 2, 4, 8, 9, 10], "defin": [1, 2, 4, 8, 9, 10, 11, 12], "waypoint": [1, 2, 4, 9, 10, 12], "minimis": [1, 4], "object": [1, 4, 8, 10, 11, 12], "function": [1, 4, 9, 10, 11], "time": [1, 2, 4, 8, 9, 10], "fuel": [1, 2, 4, 5, 8, 9, 10, 11], "onc": [1, 2, 8, 12], "formul": 1, "procedur": [1, 6], "non": 1, "improv": 1, "input": [1, 10, 11, 12], "pipelin": 1, "make": [1, 8], "found": [1, 2, 3, 6], "document": [1, 2, 3], "produc": [1, 2, 11], "form": [1, 8, 10], "which": [1, 2, 8, 10, 11, 12], "addit": [1, 2, 8, 12], "seri": [1, 6, 10], "class": [1, 5, 8, 10, 11], "interact": [1, 12], "map": [1, 11], "static": 1, "These": [1, 4, 8, 10, 12], "later": 1, "polarrout": [2, 3, 6], "4": 2, "cli": [2, 12], "entri": [2, 5, 8, 10, 12], "point": [2, 5, 8, 9, 12], "intend": 2, "success": 2, "through": [2, 3, 5, 9, 10, 12], "encod": [2, 8, 12], "vessel_config": [2, 8, 11], "posit": [2, 8], "argument": [2, 3, 5], "A": [2, 4, 5, 8, 10], "detail": [2, 11, 12], "format": [2, 8, 9, 10, 11, 12], "requir": [2, 4, 7, 11, 12], "creat": [2, 12], "create_mesh": 2, "meshiphi": [2, 12], "option": [2, 3, 7], "verbos": 2, "log": 2, "o": [2, 7], "locat": [2, 8, 10], "return": [2, 4, 8, 9, 10, 11], "explain": 2, "optim": [2, 10, 12], "route_config": [2, 12], "csv": [2, 4, 8, 12], "paramet": [2, 4, 5, 9, 10, 11, 12], "ad": [2, 6], "when": [2, 7, 8], "contain": [2, 4, 8, 9, 10, 11], "abov": [2, 4, 5], "As": [2, 8], "tabl": 2, "name": [2, 4, 8, 9, 10], "lat": [2, 4, 8, 10], "destin": 2, "hallei": [2, 8, 10], "75": [2, 8, 10], "26722": [2, 8, 10], "27": [2, 8, 10], "21694": [2, 8, 10], "x": [2, 9], "rothera": [2, 8, 10], "68": 2, "3892": 2, "95": 2, "2436": 2, "south": 2, "georgia": 2, "54": 2, "87916667": 2, "37": 2, "26416667": 2, "falkland": [2, 8, 10], "55": 2, "63472222": 2, "64": 2, "88": 2, "eleph": 2, "island": 2, "60": 2, "54722222": 2, "18138889": 2, "mai": [2, 8, 12], "extend": 2, "determin": [2, 4, 9, 10, 11], "either": [2, 4, 5, 6, 10, 12], "column": [2, 4, 8], "mark": 2, "p": 2, "onli": [2, 4, 5, 7], "entir": 2, "d": 2, "well": 2, "built": 2, "export": [2, 7], "other": [2, 11], "system": [2, 7], "gi": 2, "output_loc": 2, "output_format": 2, "save": [2, 4, 8, 12], "support": [2, 4, 5], "default": [2, 8], "geo": 2, "collect": 2, "polygon": 2, "cell": [2, 4, 8, 9, 10, 11], "geojson": [2, 4, 8, 9, 10], "tif": 2, "rasteris": 2, "format_conf": 2, "data_nam": 2, "elev": [2, 8], "sampling_resolut": 2, "150": 2, "3031": 2, "color_conf": 2, "txt": 2, "layer": 2, "resolut": 2, "list": [2, 4, 8, 9, 10], "valu": [2, 4, 8, 9, 10, 11], "first": [2, 7, 12], "being": [2, 11], "second": 2, "y": [2, 9], "string": [2, 4, 5, 8, 10], "epsg": 2, "color": 2, "text": 2, "scheme": 2, "0": [2, 5, 8, 9, 10], "240": 2, "250": 2, "160": 2, "30": 2, "230": 2, "220": 2, "170": 2, "100": 2, "per": 2, "correspond": [2, 7], "red": 2, "green": 2, "blue": 2, "255": 2, "specifi": [2, 5], "you": [2, 7], "want": 2, "singl": 2, "rebuild": 2, "origin": [2, 8], "config": [2, 3, 7, 10, 11], "store": 2, "within": [2, 4, 6, 9, 10, 11, 12], "debug": [2, 10], "updat": [2, 7, 10, 11], "old": 2, "older": 2, "version": [2, 7], "reappli": 2, "were": 2, "cost": [2, 9, 10], "pre": 2, "assum": [2, 7], "order": [2, 9], "given": [2, 5, 8, 9, 10, 11], "rhumb": 2, "ident": 2, "out": 2, "If": [2, 4, 10], "cross": [2, 9], "consid": [2, 8], "inaccess": [2, 8, 11], "warn": 2, "displai": 2, "visualis": 2, "geoplot": 2, "librari": 2, "relev": [2, 8, 9, 11], "page": [2, 7, 12], "qgi": 2, "common": [2, 7, 11], "portion": 3, "pass": [3, 8, 12], "script": 3, "directori": [3, 11], "descript": [3, 8], "objective_funct": [4, 10], "traveltim": [4, 8, 9, 10], "path_vari": [4, 8], "waypoints_org": 4, "source_waypoint": 4, "longpathstart": 4, "end_waypoint": [4, 10], "vector": [4, 9, 10], "uc": [4, 9], "vc": [4, 9], "zero_curr": 4, "fals": [4, 10], "variable_spe": 4, "true": [4, 11], "time_unit": 4, "dai": [4, 10, 11], "early_stopping_criterion": 4, "save_dijkstra_graph": 4, "max": [4, 11], "iter": 4, "number": 4, "1000": 4, "minimum": [4, 5, 11], "differ": 4, "1e": 4, "3": [4, 7, 11], "typic": [4, 5], "waypoints_path": [4, 8], "filepath": 4, "includ": [4, 7, 8, 9, 10, 11], "left": 4, "blank": 4, "end": [4, 8, 9, 10], "vector_nam": 4, "definit": [4, 8], "horizont": 4, "vertic": 4, "compon": [4, 9, 10], "act": [4, 8, 11], "cellbox": [4, 8, 9, 10, 11], "bool": [4, 11], "remov": [4, 10, 11], "effect": 4, "current": [4, 5, 9], "zero": 4, "speed": [4, 5, 8, 9, 10, 11], "unit": [4, 5, 10], "take": [4, 8, 11], "hr": [4, 5, 10], "futur": 4, "releas": 4, "earli": 4, "stop": 4, "criterion": 4, "full": [4, 6, 8], "should": [4, 5, 8, 9, 10, 11], "conjunct": 4, "repres": [4, 8, 12], "across": [4, 10, 11], "max_iteration_numb": 4, "int": [4, 9, 10], "maximum": [4, 5, 11], "most": 4, "converg": 4, "met": 4, "100x": 4, "earlier": 4, "than": 4, "minimum_differ": 4, "float": [4, 5, 8, 9, 10, 11], "befor": 4, "trigger": 4, "necessari": 5, "about": [5, 8, 10, 12], "execut": 5, "consumpt": [5, 8, 11], "vesselperformancemodel": [5, 8, 11], "vessel_typ": 5, "max_spe": 5, "26": [5, 8, 10], "5": [5, 8, 10], "km": [5, 10, 11], "beam": 5, "24": 5, "hull_typ": 5, "slender": 5, "force_limit": 5, "96634": 5, "max_ice_conc": 5, "80": 5, "min_depth": 5, "10": [5, 7], "measur": 5, "width": 5, "metr": 5, "hull": 5, "profil": 5, "one": [5, 7, 11], "blunt": 5, "resist": [5, 8, 11], "forc": [5, 8, 10, 11], "newton": 5, "concentr": [5, 11], "abl": 5, "percentag": [5, 11], "depth": [5, 11], "discuss": [6, 12], "googl": 6, "colab": 6, "link": 6, "shortli": 6, "step": [7, 12], "9": 7, "don": 7, "t": 7, "work": [7, 11], "suggest": 7, "anaconda": 7, "distribut": 7, "http": [7, 8], "www": 7, "com": 7, "product": 7, "instruct": 7, "git": 7, "clone": 7, "setup": 7, "py": 7, "pip": 7, "It": [7, 8], "tiff": 7, "imag": 7, "so": 7, "would": [7, 8], "recommend": 7, "steer": 7, "clear": 7, "trivial": 7, "problem": 7, "With": 7, "said": 7, "variou": 7, "higher": 7, "virtual": 7, "pipwin": 7, "easi": 7, "binari": 7, "fiona": 7, "ubuntu": 7, "debian": 7, "sudo": 7, "add": 7, "apt": 7, "ppa": 7, "ubuntugi": 7, "get": [7, 10], "bin": 7, "libgdal": 7, "dev": 7, "cplus_include_path": 7, "usr": 7, "c_include_path": 7, "fedora": 7, "dnf": 7, "devel": 7, "homebrew": 7, "brew": 7, "head": 7, "contract": 8, "transform": 8, "stream": 8, "import": [8, 12], "polar_rout": [8, 9, 10, 11, 12], "vessel_perform": [8, 11, 12], "vessel_performance_model": [8, 11], "r": [8, 12], "f": [8, 12], "load": [8, 9, 10, 11, 12], "vpm": 8, "mesh_json": 8, "model_access": [8, 11], "model_perform": [8, 11], "vessel_mesh_json": 8, "to_json": [8, 10, 11, 12], "To": [8, 12], "rang": 8, "attribut": [8, 10, 11], "avail": 8, "via": 8, "data_load": 8, "gebco": 8, "bsose_depth": 8, "sic": [8, 10, 11], "amsr": 8, "bsose_s": 8, "baltic_s": 8, "icenet": 8, "modi": 8, "thick": [8, 11], "densiti": [8, 11], "u10": 8, "v10": 8, "era5_wind": 8, "see": [8, 10, 12], "dataload": 8, "still": 8, "without": 8, "assign": 8, "miss": 8, "after": [8, 12], "new": 8, "its": [8, 10, 11], "neighbour": [8, 10, 11], "rate": [8, 11], "boolean": [8, 11], "whether": 8, "reason": 8, "land": [8, 11], "shallow": [8, 11], "enough": 8, "ext_ic": [8, 11], "total": [8, 10], "encount": 8, "due": [8, 11], "wind": 8, "rel": 8, "appar": 8, "angl": 8, "dure": [8, 12], "piplin": 8, "case": [8, 9, 10, 12], "ot": 8, "n": 8, "52": [8, 10], "6347222222": [8, 10], "index": [8, 9, 10], "row": 8, "etc": 8, "latitud": [8, 10], "wgs84": 8, "longitud": [8, 10], "wa": 8, "convert": 8, "panda": 8, "datafram": [8, 9, 10], "waypoints_datafram": 8, "pd": [8, 10], "featurecollect": [8, 10], "geometri": [8, 10], "linestr": [8, 10], "coordin": [8, 9, 10], "07960297382266": [8, 10], "619238882768894": [8, 10], "03531938671648596": [8, 10], "050310986633880575": [8, 10], "9648858923588642": [8, 10], "3745886107069096": [8, 10], "2017": [8, 10], "01": [8, 10], "00": [8, 10], "50": [8, 10], "51": [8, 10], "595036800": [8, 10], "12": [8, 10], "869276800": [8, 10], "infor": 8, "org": 8, "meta": 8, "cumul": 8, "along": [8, 9, 10], "utc": 8, "datetim": [8, 10], "start_tim": 8, "describ": [9, 10], "evalu": 9, "previou": [9, 10], "route_calc": 9, "case_from_angl": 9, "direct": [9, 10], "associ": [9, 10], "ndarrai": 9, "select": [9, 10], "find_intersect": 9, "df": 9, "find": [9, 11], "param": [9, 11], "info": [9, 10, 12], "geodatafram": 9, "dictionari": [9, 10, 11], "id": [9, 10], "track_point": 9, "dict": [9, 10, 11], "load_mesh": 9, "mesh_fil": 9, "str": 9, "load_rout": 9, "route_fil": 9, "from_wp": 9, "to_wp": 9, "order_track": 9, "track": 9, "user_track": 9, "user_path": 9, "traveltime_dist": 9, "wp": [9, 10], "cp": [9, 10], "vector_x": 9, "vector_i": 9, "segment": [9, 10], "kei": [9, 10], "arrai": 9, "traveltime_in_cel": 9, "xdist": [9, 10], "ydist": [9, 10], "u": [9, 10], "": [9, 10], "insid": 9, "respect": 10, "environment": [10, 11, 12], "route_plann": [10, 12], "cost_func": 10, "newtoniandist": 10, "compute_rout": [10, 12], "compute_smoothed_rout": [10, 12], "independ": 10, "interest": 10, "_dijkstra": 10, "wpt_name": 10, "whole": 10, "domain": 10, "_dijkstra_path": 10, "start_waypoint": 10, "hidden": 10, "intern": 10, "_neighbour_cost": 10, "minimum_objective_index": 10, "edg": 10, "_objective_valu": 10, "source_graph": 10, "neighbour_graph": 10, "append": [10, 12], "blocked_metr": 10, "previous": 10, "_initialise_dijkstra_graph": 10, "dijkstra_graph": 10, "initialis": [10, 11, 12], "dijkstra_graph_dict": 10, "compris": 10, "_initialise_dijkstra_rout": 10, "dijkstra_rout": 10, "ap": 10, "find_edg": 10, "adjac": 10, "pair": 10, "_json_str": 10, "implement": 10, "unsmooth": 10, "newtoniancurv": 10, "go": 10, "crossing_smooth": 10, "pathvalu": 10, "intersect": 10, "path_requested_vari": 10, "cumsum": 10, "cell_index": 10, "none": 10, "unit_shipspe": 10, "knot": 10, "unit_tim": 10, "min": 10, "_case_from_angl": 10, "_traveltime_in_cel": 10, "_unit_spe": 10, "val": 10, "m": [10, 11], "_unit_tim": 10, "_waypoint_correct": 10, "correct": 10, "usag": [10, 11], "request": 10, "transit": 10, "tupl": 10, "segment_valu": 10, "connect": 10, "adjacent_pair": 10, "relat": [10, 11], "waypoint_correct": 10, "_dist_around_glob": 10, "start_point": 10, "crossing_point": 10, "globe": 10, "degre": 10, "cell_a": 10, "cell_b": 10, "characterist": [10, 11], "_find_edg": 10, "travers": 11, "particular": 11, "what": 11, "access": 11, "b": 11, "c": 11, "weddel": 11, "latter": 11, "quantiti": 11, "deriv": 11, "former": 11, "uml": 11, "diagram": 11, "subsystem": 11, "env_mesh_json": 11, "both": 11, "modifi": 11, "__init__": 11, "accordingli": 11, "represent": 11, "j_mesh": 11, "vessel_factori": 11, "vesselfactori": 11, "classmethod": 11, "get_vessel": 11, "instanc": 11, "design": 11, "abstract_vessel": 11, "abstractvessel": 11, "aggregatedcellbox": 11, "access_valu": 11, "performance_valu": 11, "abstract_ship": 11, "abstractship": 11, "extreme_ic": 11, "criteria": 11, "invert_resist": 11, "keep": 11, "threshold": 11, "averag": 11, "kg": 11, "safe": 11, "h": 11, "new_spe": 11, "model_fuel": 11, "model_resist": 11, "model_spe": 11, "abstract_glid": 11, "abstractglid": 11, "level": 11, "too": 11, "slocumglid": 11, "g2": 11, "model_batteri": 11, "batteri": 11, "ah": 11, "done": 12, "termin": 12, "against": 12, "vesselperform": 12, "vp": 12, "cast": 12, "dump": 12, "now": 12, "depend": 12, "further": 12, "reduc": 12, "compute_smooth_rout": 12, "replac": 12, "rp": 12}, "objects": {"polar_route": [[10, 0, 0, "-", "crossing"], [10, 0, 0, "-", "crossing_smoothing"], [9, 0, 0, "-", "route_calc"], [10, 0, 0, "-", "route_planner"]], "polar_route.crossing_smoothing": [[10, 1, 1, "", "PathValues"], [10, 4, 1, "", "_dist_around_globe"], [10, 1, 1, "", "find_edge"]], "polar_route.crossing_smoothing.PathValues": [[10, 2, 1, "", "_case_from_angle"], [10, 2, 1, "", "_traveltime_in_cell"], [10, 2, 1, "", "_unit_speed"], [10, 2, 1, "", "_unit_time"], [10, 2, 1, "", "_waypoint_correction"], [10, 2, 1, "", "objective_function"], [10, 3, 1, "", "path_requested_variables"], [10, 3, 1, "", "unit_shipspeed"], [10, 3, 1, "", "unit_time"]], "polar_route.crossing_smoothing.find_edge": [[10, 2, 1, "", "_find_edge"]], "polar_route.route_calc": [[9, 4, 1, "", "case_from_angle"], [9, 4, 1, "", "find_intersections"], [9, 4, 1, "", "load_mesh"], [9, 4, 1, "", "load_route"], [9, 4, 1, "", "order_track"], [9, 4, 1, "", "route_calc"], [9, 4, 1, "", "traveltime_distance"], [9, 4, 1, "", "traveltime_in_cell"]], "polar_route.route_planner": [[10, 1, 1, "", "RoutePlanner"], [10, 4, 1, "", "_initialise_dijkstra_graph"], [10, 4, 1, "", "_initialise_dijkstra_route"], [10, 4, 1, "", "_json_str"]], "polar_route.route_planner.RoutePlanner": [[10, 2, 1, "", "_dijkstra"], [10, 2, 1, "", "_dijkstra_paths"], [10, 2, 1, "", "_neighbour_cost"], [10, 2, 1, "", "_objective_value"], [10, 2, 1, "", "compute_routes"], [10, 2, 1, "", "compute_smoothed_routes"], [10, 3, 1, "", "paths"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "waypoints"]], "polar_route.vessel_performance": [[11, 0, 0, "-", "abstract_vessel"], [11, 0, 0, "-", "vessel_factory"], [11, 0, 0, "-", "vessel_performance_modeller"]], "polar_route.vessel_performance.abstract_vessel": [[11, 1, 1, "", "AbstractVessel"]], "polar_route.vessel_performance.abstract_vessel.AbstractVessel": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "model_accessibility"], [11, 2, 1, "", "model_performance"]], "polar_route.vessel_performance.vessel_factory": [[11, 1, 1, "", "VesselFactory"]], "polar_route.vessel_performance.vessel_factory.VesselFactory": [[11, 2, 1, "", "get_vessel"]], "polar_route.vessel_performance.vessel_performance_modeller": [[11, 1, 1, "", "VesselPerformanceModeller"]], "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "model_accessibility"], [11, 2, 1, "", "model_performance"], [11, 2, 1, "", "to_json"]], "polar_route.vessel_performance.vessels": [[11, 0, 0, "-", "SDA"], [11, 0, 0, "-", "abstract_glider"], [11, 0, 0, "-", "abstract_ship"], [11, 0, 0, "-", "slocum"]], "polar_route.vessel_performance.vessels.SDA": [[11, 1, 1, "", "SDA"]], "polar_route.vessel_performance.vessels.SDA.SDA": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "invert_resistance"], [11, 2, 1, "", "model_fuel"], [11, 2, 1, "", "model_resistance"], [11, 2, 1, "", "model_speed"]], "polar_route.vessel_performance.vessels.abstract_glider": [[11, 1, 1, "", "AbstractGlider"]], "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "extreme_ice"], [11, 2, 1, "", "land"], [11, 2, 1, "", "model_accessibility"], [11, 2, 1, "", "model_performance"], [11, 2, 1, "", "shallow"]], "polar_route.vessel_performance.vessels.abstract_ship": [[11, 1, 1, "", "AbstractShip"]], "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "extreme_ice"], [11, 2, 1, "", "land"], [11, 2, 1, "", "model_accessibility"], [11, 2, 1, "", "model_performance"]], "polar_route.vessel_performance.vessels.slocum": [[11, 1, 1, "", "SlocumGlider"]], "polar_route.vessel_performance.vessels.slocum.SlocumGlider": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "model_battery"], [11, 2, 1, "", "model_speed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "polarrout": [0, 7], "manual": 0, "page": 0, "background": 1, "code": [1, 6], "overview": [1, 3, 9, 10, 11], "structur": 1, "command": 2, "line": 2, "interfac": 2, "add_vehicl": 2, "optimise_rout": 2, "export_mesh": 2, "rebuild_mesh": 2, "calculate_rout": 2, "plot": 2, "configur": [3, 4, 5], "rout": [4, 6, 8, 9, 10, 12], "plan": 4, "vessel": [5, 11, 12], "perform": [5, 11], "model": [5, 11], "exampl": 6, "run": 6, "1": 6, "antarctica": 6, "process": 6, "all": 6, "stage": 6, "planner": [6, 10], "2": 6, "dijkstra": 6, "v": 6, "smooth": [6, 10], "path": [6, 8], "variat": 6, "vehicl": 6, "properti": 6, "instal": 7, "gdal": 7, "window": 7, "linux": 7, "maco": 7, "output": 8, "data": 8, "type": 8, "The": 8, "vessel_mesh": 8, "json": 8, "file": 8, "waypoint": 8, "method": [9, 10, 11], "calcul": 9, "optimis": [10, 12], "modul": 10, "cross": 10, "point": 10, "factori": 11, "abstract": 11, "ship": 11, "sda": 11, "glider": 11, "slocum": 11, "python": 12, "ipython": 12, "notebook": 12, "simul": 12, "digit": 12, "environ": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Welcome to the PolarRoute Manual Pages": [[0, "welcome-to-the-polarroute-manual-pages"]], "Background": [[1, "background"]], "Code Overview": [[1, "code-overview"]], "Code Structure": [[1, "code-structure"]], "Command Line Interface": [[2, "command-line-interface"]], "add_vehicle": [[2, "add-vehicle"]], "optimise_routes": [[2, "optimise-routes"]], "export_mesh": [[2, "export-mesh"]], "rebuild_mesh": [[2, "rebuild-mesh"]], "calculate_route": [[2, "calculate-route"]], "Plotting": [[2, "plotting"]], "Configuration Overview": [[3, "configuration-overview"]], "Configuration - Route Planning": [[4, "configuration-route-planning"]], "Configuration - Vessel Performance Modeller": [[5, "configuration-vessel-performance-modeller"]], "Examples of running code": [[6, "examples-of-running-code"]], "Example 1 - Antarctica Processing all stages of route planner": [[6, "example-1-antarctica-processing-all-stages-of-route-planner"]], "Example 2 - Dijkstra vs smooth paths": [[6, "example-2-dijkstra-vs-smooth-paths"]], "Example 2 - Variations of Vehicle Properties on Route Paths": [[6, "example-2-variations-of-vehicle-properties-on-route-paths"]], "Installation": [[7, "installation"]], "Installing PolarRoute": [[7, "installing-polarroute"]], "Installing GDAL": [[7, "installing-gdal"]], "Windows": [[7, "windows"]], "Linux/MacOS": [[7, "linux-macos"]], "Outputs - Data Types": [[8, "outputs-data-types"]], "The Vessel_mesh.json file": [[8, "the-vessel-mesh-json-file"]], "The Route.json file": [[8, "the-route-json-file"]], "waypoints": [[8, "waypoints"]], "paths": [[8, "paths"]], "Methods - Route Calculation": [[9, "methods-route-calculation"]], "Route Calculation Overview": [[9, "route-calculation-overview"]], "Route Calculation": [[9, "module-polar_route.route_calc"]], "Methods - Route Planner": [[10, "methods-route-planner"]], "Route Optimisation Overview": [[10, "route-optimisation-overview"]], "Route Optimisation Modules": [[10, "route-optimisation-modules"]], "Route Planner": [[10, "module-polar_route.route_planner"]], "Crossing Points": [[10, "module-polar_route.crossing"]], "Crossing Point Smoothing": [[10, "module-polar_route.crossing_smoothing"]], "Methods - Vessel Performance": [[11, "methods-vessel-performance"]], "Vessel Overview": [[11, "vessel-overview"]], "Vessel Performance Modeller": [[11, "module-polar_route.vessel_performance.vessel_performance_modeller"]], "Vessel Factory": [[11, "module-polar_route.vessel_performance.vessel_factory"]], "Abstract Vessel": [[11, "module-polar_route.vessel_performance.abstract_vessel"]], "Abstract Ship": [[11, "module-polar_route.vessel_performance.vessels.abstract_ship"]], "SDA": [[11, "module-polar_route.vessel_performance.vessels.SDA"]], "Abstract Glider": [[11, "module-polar_route.vessel_performance.vessels.abstract_glider"]], "Slocum Glider": [[11, "module-polar_route.vessel_performance.vessels.slocum"]], "Python & iPython Notebooks": [[12, "python-ipython-notebooks"]], "Simulating a Vessel in a Digital Environment": [[12, "simulating-a-vessel-in-a-digital-environment"]], "Route Optimisation": [[12, "route-optimisation"]]}, "indexentries": {"case_from_angle() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.case_from_angle"]], "find_intersections() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.find_intersections"]], "load_mesh() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.load_mesh"]], "load_route() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.load_route"]], "module": [[9, "module-polar_route.route_calc"], [10, "module-polar_route.crossing"], [10, "module-polar_route.crossing_smoothing"], [10, "module-polar_route.route_planner"], [11, "module-polar_route.vessel_performance.abstract_vessel"], [11, "module-polar_route.vessel_performance.vessel_factory"], [11, "module-polar_route.vessel_performance.vessel_performance_modeller"], [11, "module-polar_route.vessel_performance.vessels.SDA"], [11, "module-polar_route.vessel_performance.vessels.abstract_glider"], [11, "module-polar_route.vessel_performance.vessels.abstract_ship"], [11, "module-polar_route.vessel_performance.vessels.slocum"]], "order_track() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.order_track"]], "polar_route.route_calc": [[9, "module-polar_route.route_calc"]], "route_calc() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.route_calc"]], "traveltime_distance() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.traveltime_distance"]], "traveltime_in_cell() (in module polar_route.route_calc)": [[9, "polar_route.route_calc.traveltime_in_cell"]], "pathvalues (class in polar_route.crossing_smoothing)": [[10, "polar_route.crossing_smoothing.PathValues"]], "routeplanner (class in polar_route.route_planner)": [[10, "polar_route.route_planner.RoutePlanner"]], "_case_from_angle() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues._case_from_angle"]], "_dijkstra() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner._dijkstra"]], "_dijkstra_paths() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner._dijkstra_paths"]], "_dist_around_globe() (in module polar_route.crossing_smoothing)": [[10, "polar_route.crossing_smoothing._dist_around_globe"]], "_find_edge() (polar_route.crossing_smoothing.find_edge method)": [[10, "polar_route.crossing_smoothing.find_edge._find_edge"]], "_initialise_dijkstra_graph() (in module polar_route.route_planner)": [[10, "polar_route.route_planner._initialise_dijkstra_graph"]], "_initialise_dijkstra_route() (in module polar_route.route_planner)": [[10, "polar_route.route_planner._initialise_dijkstra_route"]], "_json_str() (in module polar_route.route_planner)": [[10, "polar_route.route_planner._json_str"]], "_neighbour_cost() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner._neighbour_cost"]], "_objective_value() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner._objective_value"]], "_traveltime_in_cell() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues._traveltime_in_cell"]], "_unit_speed() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues._unit_speed"]], "_unit_time() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues._unit_time"]], "_waypoint_correction() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues._waypoint_correction"]], "compute_routes() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner.compute_routes"]], "compute_smoothed_routes() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner.compute_smoothed_routes"]], "find_edge (class in polar_route.crossing_smoothing)": [[10, "polar_route.crossing_smoothing.find_edge"]], "objective_function() (polar_route.crossing_smoothing.pathvalues method)": [[10, "polar_route.crossing_smoothing.PathValues.objective_function"]], "path_requested_variables (polar_route.crossing_smoothing.pathvalues attribute)": [[10, "polar_route.crossing_smoothing.PathValues.path_requested_variables"]], "paths (polar_route.route_planner.routeplanner attribute)": [[10, "polar_route.route_planner.RoutePlanner.paths"]], "polar_route.crossing": [[10, "module-polar_route.crossing"]], "polar_route.crossing_smoothing": [[10, "module-polar_route.crossing_smoothing"]], "polar_route.route_planner": [[10, "module-polar_route.route_planner"]], "to_json() (polar_route.route_planner.routeplanner method)": [[10, "polar_route.route_planner.RoutePlanner.to_json"]], "unit_shipspeed (polar_route.crossing_smoothing.pathvalues attribute)": [[10, "polar_route.crossing_smoothing.PathValues.unit_shipspeed"]], "unit_time (polar_route.crossing_smoothing.pathvalues attribute)": [[10, "polar_route.crossing_smoothing.PathValues.unit_time"]], "waypoints (polar_route.route_planner.routeplanner attribute)": [[10, "polar_route.route_planner.RoutePlanner.waypoints"]], "abstractglider (class in polar_route.vessel_performance.vessels.abstract_glider)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider"]], "abstractship (class in polar_route.vessel_performance.vessels.abstract_ship)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip"]], "abstractvessel (class in polar_route.vessel_performance.abstract_vessel)": [[11, "polar_route.vessel_performance.abstract_vessel.AbstractVessel"]], "sda (class in polar_route.vessel_performance.vessels.sda)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA"]], "slocumglider (class in polar_route.vessel_performance.vessels.slocum)": [[11, "polar_route.vessel_performance.vessels.slocum.SlocumGlider"]], "vesselfactory (class in polar_route.vessel_performance.vessel_factory)": [[11, "polar_route.vessel_performance.vessel_factory.VesselFactory"]], "vesselperformancemodeller (class in polar_route.vessel_performance.vessel_performance_modeller)": [[11, "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller"]], "__init__() (polar_route.vessel_performance.abstract_vessel.abstractvessel method)": [[11, "polar_route.vessel_performance.abstract_vessel.AbstractVessel.__init__"]], "__init__() (polar_route.vessel_performance.vessel_performance_modeller.vesselperformancemodeller method)": [[11, "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller.__init__"]], "__init__() (polar_route.vessel_performance.vessels.sda.sda method)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA.__init__"]], "__init__() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.__init__"]], "__init__() (polar_route.vessel_performance.vessels.abstract_ship.abstractship method)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip.__init__"]], "__init__() (polar_route.vessel_performance.vessels.slocum.slocumglider method)": [[11, "polar_route.vessel_performance.vessels.slocum.SlocumGlider.__init__"]], "extreme_ice() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.extreme_ice"]], "extreme_ice() (polar_route.vessel_performance.vessels.abstract_ship.abstractship method)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip.extreme_ice"]], "get_vessel() (polar_route.vessel_performance.vessel_factory.vesselfactory class method)": [[11, "polar_route.vessel_performance.vessel_factory.VesselFactory.get_vessel"]], "invert_resistance() (polar_route.vessel_performance.vessels.sda.sda method)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA.invert_resistance"]], "land() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.land"]], "land() (polar_route.vessel_performance.vessels.abstract_ship.abstractship method)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip.land"]], "model_accessibility() (polar_route.vessel_performance.abstract_vessel.abstractvessel method)": [[11, "polar_route.vessel_performance.abstract_vessel.AbstractVessel.model_accessibility"]], "model_accessibility() (polar_route.vessel_performance.vessel_performance_modeller.vesselperformancemodeller method)": [[11, "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller.model_accessibility"]], "model_accessibility() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.model_accessibility"]], "model_accessibility() (polar_route.vessel_performance.vessels.abstract_ship.abstractship method)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip.model_accessibility"]], "model_battery() (polar_route.vessel_performance.vessels.slocum.slocumglider method)": [[11, "polar_route.vessel_performance.vessels.slocum.SlocumGlider.model_battery"]], "model_fuel() (polar_route.vessel_performance.vessels.sda.sda method)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA.model_fuel"]], "model_performance() (polar_route.vessel_performance.abstract_vessel.abstractvessel method)": [[11, "polar_route.vessel_performance.abstract_vessel.AbstractVessel.model_performance"]], "model_performance() (polar_route.vessel_performance.vessel_performance_modeller.vesselperformancemodeller method)": [[11, "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller.model_performance"]], "model_performance() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.model_performance"]], "model_performance() (polar_route.vessel_performance.vessels.abstract_ship.abstractship method)": [[11, "polar_route.vessel_performance.vessels.abstract_ship.AbstractShip.model_performance"]], "model_resistance() (polar_route.vessel_performance.vessels.sda.sda method)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA.model_resistance"]], "model_speed() (polar_route.vessel_performance.vessels.sda.sda method)": [[11, "polar_route.vessel_performance.vessels.SDA.SDA.model_speed"]], "model_speed() (polar_route.vessel_performance.vessels.slocum.slocumglider method)": [[11, "polar_route.vessel_performance.vessels.slocum.SlocumGlider.model_speed"]], "polar_route.vessel_performance.abstract_vessel": [[11, "module-polar_route.vessel_performance.abstract_vessel"]], "polar_route.vessel_performance.vessel_factory": [[11, "module-polar_route.vessel_performance.vessel_factory"]], "polar_route.vessel_performance.vessel_performance_modeller": [[11, "module-polar_route.vessel_performance.vessel_performance_modeller"]], "polar_route.vessel_performance.vessels.sda": [[11, "module-polar_route.vessel_performance.vessels.SDA"]], "polar_route.vessel_performance.vessels.abstract_glider": [[11, "module-polar_route.vessel_performance.vessels.abstract_glider"]], "polar_route.vessel_performance.vessels.abstract_ship": [[11, "module-polar_route.vessel_performance.vessels.abstract_ship"]], "polar_route.vessel_performance.vessels.slocum": [[11, "module-polar_route.vessel_performance.vessels.slocum"]], "shallow() (polar_route.vessel_performance.vessels.abstract_glider.abstractglider method)": [[11, "polar_route.vessel_performance.vessels.abstract_glider.AbstractGlider.shallow"]], "to_json() (polar_route.vessel_performance.vessel_performance_modeller.vesselperformancemodeller method)": [[11, "polar_route.vessel_performance.vessel_performance_modeller.VesselPerformanceModeller.to_json"]]}})